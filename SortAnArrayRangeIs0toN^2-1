/*Sort an array in the range of 0 to n^2-1
#include<iostream>
using namespace std;

void sort(int [], int );
int countSort(int [], int , int );
void printArr(int [], int ); 

int main()
{
	// Since array size is 7, elements should be from 0 to 48
	int arr[] = {40, 12, 45, 32, 33, 1, 22};
    
	int n = sizeof(arr)/sizeof(arr[0]);
    
	sort(arr, n);
 
	printArr(arr, n);
 
	return 0;
}

void sort(int arr[], int n)
{
	// Do counting sort for first digit in base n. Note that instead of passing digit number, exp (n^0 = 0) is passed.
	countSort(arr, n, 1);
 
    // Do counting sort for second digit in base n. Note that instead of passing digit number, exp (n^1 = n) is passed.
	countSort(arr, n, n);
}
 
int countSort(int arr[], int n, int exp)
{
 	int output[n]; // output array
	
	int count[n] ;
    
    int i ;
    
	for (int i=0; i < n; i++)
	count[i] = 0;
 
	for (i = 0; i < n; i++)
	count[ (arr[i]/exp)%n ]++;
 
	for (i = 1; i < n; i++)
	count[i] += count[i - 1];
 
	for (i = n - 1; i >= 0; i--)
	{
		output[count[ (arr[i]/exp)%n] - 1] = arr[i];
		count[(arr[i]/exp)%n]--;
	}
 
	for (i = 0; i < n; i++)
	arr[i] = output[i];
}
 
  
void printArr(int arr[], int n)
{
	for (int i = 0; i < n; i++)
	cout << arr[i] << " ";
}
 
